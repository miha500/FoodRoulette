== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

Aplikacijo oz. projekt sem ustvaril s komando <tt>rails new FoodRoulette</tt>.
Za pravilno uporabo terminala sem se prestavil v mapo Aplikacije tako, da bodo vsi ukazi namenjeni tej mapi z <tt>cd FoodRoulette</tt>

Nato sem aplikaciji dodal tabelo v bazi z ukazom <tt>rails generate scaffold Restaurant title:string description:text</tt>.
Vsak novo spremembo v bazi oz. migracijo je treba pognati z <tt>rake db:migrate</tt>.

Za registracijo in vpis uporabnikov sem moral dodati gem Devise, ki sem ga dodal v Gemfile z vrstico <tt>gem 'devise'</tt>.
Po vsakem na novo dodanem gem-u moramo pognati <tt>bundle install</tt>, da se nam ta Gem inštalira.
Da gem Devise dejansko deluje v aplikaciji moramo pognati ukaz <tt>rails generate devise:install</tt> in ustvariti uporabnika z <tt>rails generate devise user</tt>.
Ker je uporabnik v bazi in sem to bazo pravkar spremenil oz. ji nekaj dodal moram spet pognati migracijo z <tt>rake db:migrate</tt>.

Za avtentifikacijo uporabnika sem v app/controllers/application_controller.rb dodal <tt>before_filter :authenticate_user!</tt>

Za dodajanje restavracij oz. lokacij kjer bi lahko jedel sem zagnal komando <tt>rails generate scaffold Restaurant title:string text:text</tt> 
ter potem še enkrat <tt>rake db:migrate</tt>.

Obe tabeli sem povezal s tem da sem v app/models/user.rb dal <tt>has_many :restaurants</tt> in tako označil, da ima lahko en uporabnik več vnosov restavracij.
V app/models/restaurants pa sem dal <tt>belongs_to :user</tt>.

Za izpis tega kdo je dodal to restavracijo sem v parametre v app/controllers/restaurants_controller dodal <tt>:user_id</tt> 
in v app/views/restaurants/index.html.erb dal 
<tt><%= restaurant.user.email %></tt> da izpise email uporabnika, ki je to dodal.

Template sem dodal s pomočjo bootstrapa.

Gumb Sign Out sem dal v navbar in tam preveril a je uporabnik prijavljen s kodo <tt><% if user_signed_in? %></tt>.

Za izpis naključne restavracije sem v app/controllers/restaurant_controller.rb 
dodal v funkcijo def index: <tt>@random = Restaurant.all.sample</tt>.

V app/views/restaurants/index.html.erb pa sem dodal <tt><%= @random.title %></tt>, da mi je izpisalo naključno restavracijo.


